
fileUrl="AAAAAA"

pipeline {
    //agent any
	agent {
	    label 'Mac'
	}
	
	options {
        disableConcurrentBuilds()
    }
	
	// 全局变量
	environment {
		Name = "ABC"
	}
    stages {
	    stage('Checkout') {
            steps {
                dir('/Users/liqiang/.jenkins/workspace/Test/TestProject2') {
                    // 在自定义工作区内进行后续步骤
                    checkout scm
                }
            }
        }
		
        stage('Print WorkSpace') {
            steps {
                script {
				    echo "Hello world"
                    echo "当前的工作目录: ${env.WORKSPACE}"
					echo "BRANCH_NAME: ${env.BRANCH_NAME}"
                }
            }
        }
		
		stage('Test') {
		    steps {
			    script {
				    echo "stage Test"
				}
			}
		}
    }
	
	// 流水线 stage 执行结束后调用 post
	post {
		// 执行到 post，无论运行状态是完成还是失败，都会第一个调用 always
		always {
		    script {
			    echo "${fileUrl}"
				fileUrl = "BBBBBB"
				echo "Name=${Name}"
			    echo "This will always run, regardless of success or failure."
			}
		}
	
		// 流水线执行成功调用 success
		success {                    
			script {
		        echo "${fileUrl}"
				fileUrl = "CCCCCC"
				// 如果构建成功，执行的脚本
				echo "Build succeeded!"
				// 可以在这里执行更多的操作，例如发送成功通知
			}
		}
		
		// 流水线执行失败调用 failure
		failure{
			script {
			    echo "${fileUrl}"
				fileUrl = "DDDDDD"
				// 如果构建失败，执行的脚本
				echo "Build failed!"
				// 可以在这里执行更多的操作，例如发送失败通知
			}
		}
		
		// 手动终止执行调用 aborted
		aborted {
		    script {
			    echo "Aborted"
			}
		}
	}
}
